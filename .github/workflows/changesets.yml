name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    environment: Production
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v4.0.0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: package.json
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'
          scope: '@baseplate-dev'
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: Create Release Pull Request or Publish to NPM
        id: changesets
        uses: changesets/action@v1
        with:
          publish: pnpm release
          title: 'chore: Version Packages'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Format Packages for Slack
        if: steps.changesets.outputs.published == 'true'
        id: format-packages
        run: |
          {
            echo "FORMATTED_PACKAGES<<EOF"
            echo '${{ steps.changesets.outputs.publishedPackages }}' | jq 'map(
              {
                type: "rich_text_section",
                elements: [
                  {
                    type: "text",
                    text: .name,
                    style: { bold: true }
                  },
                  {
                    type: "text",
                    text: ": "
                  },
                  {
                    type: "text",
                    text: .version
                  }
                ]
              }
            )'
            echo EOF
            } >> "$GITHUB_OUTPUT"

      - name: Send a Slack notification if a publish happens
        if: steps.changesets.outputs.published == 'true'
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload: |
            {
              "text": "New versions of Baseplate packages were just released!",
              "blocks": [
                {
                  "type": "rich_text",
                  "elements": [
                    {
                      "type": "rich_text_section",
                      "elements": [
                        {
                          "type": "text",
                          "text": "New versions of Baseplate packages were just released:"
                        }
                      ]
                    },
                    {
                      "type": "rich_text_list",
                      "elements": ${{ steps.format-packages.outputs.FORMATTED_PACKAGES}},
                      "style": "bullet"
                    }
                  ]
                }
              ]            
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
